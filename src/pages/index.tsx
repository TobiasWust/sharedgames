import Head from "next/head";
import { useEffect, useState } from "react";
import { GoDiffAdded } from "react-icons/go";
import FriendsModal from "../components/FriendsModal";
import Game from "../components/Game";
import Player, { TPlayer } from "../components/Player";
import intersection from "../utils/intersection";
import shuffle from "../utils/shuffle";

type PlayerWithGames = {
  player: TPlayer;
  ownedGames: string[];
};

export default function Home() {
  const [playerId, setPlayerId] = useState("tobiaswust");
  const [players, setPlayers] = useState<PlayerWithGames[]>([]);
  const [gameIds, setGameIds] = useState<string[]>([]);
  const [friendsFor, setFriendsFor] = useState("");

  function getPlayerData(_playerID: string) {
    fetch(`/api/getPlayer?playerId=${_playerID}`)
      .then((res) => res.json())
      .then((data) => {
        if (
          players.find(
            (player) => player.player.personaname === data.player.personaname
          )
        ) {
          return;
        }
        setPlayers((state) => [...state, data]);
      });
  }

  function getFriends(_playerId: string) {
    setFriendsFor(_playerId);
    document.getElementById("friends-modal")?.click();
  }

  function removePlayer(_playerId: string) {
    setPlayers((state) =>
      state.filter((player) => player.player.steamid !== _playerId)
    );
  }

  useEffect(() => {
    if (players.length > 1) {
      const gIds = intersection(players.map((player) => player.ownedGames));
      setGameIds(gIds);
    } else {
      setGameIds([]);
    }
  }, [players]);

  return (
    <>
      <Head>
        <title>SharedGames</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="grid gap-3 p-4 md:p-12">
        <form
          className="input-group rounded-xl bg-base-300 p-5"
          onSubmit={(e) => {
            e.preventDefault();
            getPlayerData(playerId);
          }}
        >
          <input
            className="input w-full"
            placeholder="Enter Steam ID"
            type="text"
            value={playerId}
            onChange={(e) => setPlayerId(e.target.value)}
          />
          <button className="btn" type="submit">
            <GoDiffAdded />
          </button>
        </form>

        <h2 className="font-bold text-accent-content">PLAYERS</h2>
        <table className="table w-full">
          <tbody>
            {players.map((player) => (
              <Player
                key={player.player.steamid}
                player={player.player}
                removePlayer={() => removePlayer(player.player.steamid)}
                getFriends={() => getFriends(player.player.steamid)}
              />
            ))}
          </tbody>
        </table>
        <h2>
          <span className="font-bold text-accent-content">SHARED GAMES</span>{" "}
          {gameIds.length}
        </h2>
        {players.length < 2 && <p>Add players to compare</p>}
        {gameIds.length === 0 && players.length > 2 && (
          <p>No games in common</p>
        )}
        <div className="grid grid-cols-[repeat(auto-fill,minmax(367px,1fr))] gap-3">
          {shuffle(gameIds).map((gameId) => (
            <Game key={gameId} gameId={gameId} />
          ))}
        </div>
      </main>
      {/* eslint-disable-next-line react/jsx-no-bind */}
      <FriendsModal playerId={friendsFor} addPlayer={getPlayerData} />
    </>
  );
}
